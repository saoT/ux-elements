/*******************************************************/
/*********************** GENERAL ***********************/
/*******************************************************/
* {
  color: rgba(30, 30, 30, 1);
  font-family: sans-serif;
  font-size: 14px;
}

body {
  background-color: rgba(250, 250, 250, 1);
}

a {
  /* Enlève le underline sous un texte de lien */
  text-decoration: none;
  color: rgba(30, 30, 30, 1);
}

section {
  margin: 50px;
}

button {
  position: relative;
  height: 40px;
  width: 200px;
  background-color: rgba(0, 0, 0, 0.1)
}

li {
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
}

/*****************************************************/
/*********************** MODAL ***********************/
/*****************************************************/
.modal {
  /* Ici on veut un positionnement qui permet au block d'être "flottant". */
  /* Typiquement un absolute ou fixed */
  position: absolute;
  /* L'état par défaut est la non-display du block */
  display: none;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.9);
  /* La propriété z-index permet de définir sur quel plan se met le block. */
  /* 0 -> est le plus à l'arrière plan. */
  z-index: 100;
}

.box {
  /* block */
  position: absolute;
  top: 50%;
  left: 50%;
  /* Transform permet de transformer un élément par rapport à lui même. */
  /* translate permet de changer sa position dans l'espace, rotate de le tourner*/
  transform: translate(-50%, -50%);
  height: 230px;
  width: 400px;
  background-color: rgba(250, 250, 250, 1);
  /* content */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: justify;
  padding: 40px;
}

.modal button {
  margin: 20px;
}

/* display */
#modal-target:target {
  display: block;
  /* animation a besoin du nom de l'animation que tu vas utiliser line 162 */
  /* puis le temps d'execution */
  animation: fadein 0.4s;
}

/**********************************/
/************ DROPDOWN ************/
/**********************************/
.dropdown {
  max-height: auto;
}

.dropdown {
  /* normalement si je mets un contenu dans ma div plus grand que ma div, ce contenu dépasse de la div */
  /* C'est parce-que la propriété overflow est sur visible. overflow hidden permet de cacher ce qui dépasse*/
  overflow: hidden;
  width:200px;
  height: 0px;
  /* transition prend le nom de la propriété dont on veut pouvoir animer la transition */
  /* ici par exemple on change la height  on peut aussi préciser all */
  /* toutes les propriétés css ne peuvent pas être "transitionnées" */
  /* puis le temps d'execution */
  transition: height 0.4s;
}

/* on sélectionne la div .dropdown, qui est frère du bouton quand en état hover */
#dropdown-hover button:hover + .dropdown,
/* on sélectionne la dive .dropdown en état hover */
.dropdown:hover {
  /* on déploie la taille du menu dropdown */
  height: 120px;
}

/*******************************/
/*********** TOOLTIP ***********/
/*******************************/
#tooltip-hover {
  position: relative;
  padding-top: 55px;
}

.tooltip {
  position: absolute;
  top: 0;
  background-color: rgba(0, 0, 0, 0.7);
  width: 150px;
  height: 20px;
  margin: 20px;
  opacity: 0;
  /* animation d'opacity */
  transition: opacity 0.4s;
}

/* le + sert à séléctionner un état hover */
#tooltip-hover button:hover + .tooltip {
  opacity: 1;
}

.content {
  border-radius: 5px;
  color: rgba(220, 220, 220, 1);
  text-align: center;
  padding-top: 2px;
}

/* La pointe du tooltip est un triangle fait en css */
/* Pour faire un triangle en css on fait des border épais sur une div avec 0 width et 0 height */
.triangle {
  position: absolute;
  top: 20px;
  left: 20px;
  width: 0;
  height: 0;
  border-style: solid;
  border-width: 10px 10px 0 10px;
  border-color: rgba(0, 0, 0, 0.7) transparent transparent transparent;
}

/***********************************/
/************ ACCORDEON ************/
/***********************************/
.accordeon {
  /* meme mécanisme que le dropdown avec l'overflow */
  overflow: hidden;
  width: 200px;
}

.hidden {
  overflow: hidden;
  height: 0;
  padding-top: 0;
  opacity: 0;
  transition: all 0.4s;
}

.hidden:target {
  /* avec à la fois le */
  opacity: 1;
  height: 80px;
  padding-top: 30px;
}

/***********************************/
/************ ANIMATION ************/
/***********************************/
@keyframes fadein {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}